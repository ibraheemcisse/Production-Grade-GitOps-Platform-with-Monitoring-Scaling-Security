apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: gitops-platform-frontend-rollout
  namespace: gitops-platform
  labels:
    app.kubernetes.io/name: frontend
    app.kubernetes.io/part-of: gitops-platform
spec:
  replicas: 3
  strategy:
    canary:
      # Canary deployment configuration
      canaryService: frontend-canary
      stableService: frontend-stable
      
      # Traffic splitting
      trafficRouting:
        nginx:
          stableIngress: frontend-stable
          canaryIngress: frontend-canary
          additionalIngressAnnotations:
            canary-by-header: "x-canary"
      
      # Canary steps
      steps:
      - setWeight: 20
      - pause: {duration: 2m}
      - setWeight: 40
      - pause: {duration: 2m}
      - setWeight: 60
      - pause: {duration: 2m}
      - setWeight: 80
      - pause: {duration: 2m}
      - setWeight: 100
      
      # Analysis and automatic promotion/rollback
      analysis:
        templates:
        - templateName: success-rate
        startingStep: 2
        args:
        - name: service-name
          value: frontend-canary
        - name: prometheus-server
          value: http://prometheus-server.monitoring.svc:9090
      
      # Anti-affinity for canary pods
      antiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app: frontend
            topologyKey: kubernetes.io/hostname
  
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app.kubernetes.io/name: frontend
      app.kubernetes.io/part-of: gitops-platform
  
  template:
    metadata:
      labels:
        app.kubernetes.io/name: frontend
        app.kubernetes.io/part-of: gitops-platform
    spec:
      serviceAccountName: frontend
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      
      containers:
      - name: frontend
        image: your-registry/gitops-platform/frontend:latest
        imagePullPolicy: Always
        
        ports:
        - containerPort: 3000
          protocol: TCP
        
        env:
        - name: NODE_ENV
          value: "production"
        - name: API_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: frontend-config
              key: api-base-url
        
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
